<apex:page controller="vlocity_cmt.DocTemplateListController" showHeader="true" sidebar="true" standardStylesheets="false" tabStyle="VlocityCardHome__tab" extensions="vlocity_cmt.DRDataPackRunnerController" docType="html-5.0" applyBodyTag="false">
    <head>
        <meta charset="utf-8"/>
        <apex:includeScript value="{!$Resource.vlocity_cmt__angular_bundle_1_6}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__vlocity_assets, '/bower_components/ng-table/dist/ng-table.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.vlocity_cmt__ngInfiniteScroll, '/build/ng-infinite-scroll.min.js')}"/>
        <apex:stylesheet value="{!IF(isLanguageRTL, URLFOR($Resource.vlocity_cmt__slds_2_2_2, '/assets/styles/salesforce-lightning-design-system-vf.rtl.min.css'), URLFOR($Resource.vlocity_cmt__slds_2_2_2, '/assets/styles/salesforce-lightning-design-system-vf.min.css'))}"/>
        <apex:includeScript value="{!$Resource.vlocity_cmt__SldsAngular}"/>
        <apex:includeScript value="{!$Resource.vlocity_cmt__DRVComp}"/>
        <script type="text/javascript">
            var docTemplateList = angular.module('docTemplateListApp', ['drvcomp', 'sldsangular', 'ngTable', 'vlocity', 'infinite-scroll'])
            .config(['$localizableProvider', function($localizableProvider) {
                'use strict';
                $localizableProvider.setLocalizedMap(window.i18n);
                $localizableProvider.setDebugMode(false);
            }]);

            //Controller
            docTemplateList.controller('docTemplateListController', ['$scope', '$filter', '$localizable', function($scope, $filter, $localizable) {
                'use strict';
                var namespacePrefix = '{!namespacePrefix}';

                // Start sldsHome directive data
                $scope.defaultColumns = [{
                    //field: $localizable('Name', 'Name'),
                    field: 'Name',
                    additionalFields: [namespacePrefix + 'VersionNumber__c'],
                    getValue: function($scope, row) {
                        return '<a href="/apex/' + namespacePrefix + 'DocumentTemplate?templateId=' + row.Id + '">' + row.Name + ' (Version ' +
                                        row[namespacePrefix + 'VersionNumber__c'] + ')</a>';
                    }
                }, {
                    field: namespacePrefix + 'ApplicableTypes__c',
                    getValue: function() {
                        return '';
                    }
                }, {
                    field: namespacePrefix + 'MappingType__c',
                    getValue: function() {
                        return '';
                    }
                },{
                    field: namespacePrefix + 'UsageType__c',
                    getValue: function() {
                        return '';
                    }
                },{
                    //title: $localizable('LastModified', 'Last Modified'),
                    field: 'LastModifiedDate',
                    getValue: function($scope, row) {
                        return 'Modified on ' + $filter('date')(row.LastModifiedDate) + ' by ' + row.LastModifiedBy.Name;
                    },
                    getGroupValue: function($scope, $group) {
                        var mostRecent = $group.data[0].LastModifiedDate;
                        $group.data.forEach(function(data) {
                            if (data.LastModifiedDate > mostRecent) {
                                mostRecent = data.LastModifiedDate;
                            }
                        });
                        return $filter('date')(mostRecent);
                    }
                }, {
                    field: namespacePrefix + 'IsActive__c',
                    shrink: true,
                    dynamic: true,
                    getValue: function($scope, row) {
                        if (row[namespacePrefix + 'IsActive__c']) {
                            return '<span class="slds-icon_container" title="Is Active"><slds-svg-icon sprite="\'utility\'"' +
                                    ' icon="\'success\'" size="\'x-small\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon></span>';
                        }
                    },
                    getGroupValue: function($scope, $group) {
                        var hasAnActiveEntry = false;
                        $group.data.forEach(function(row) {
                            if (row[namespacePrefix + 'IsActive__c']) {
                                hasAnActiveEntry = true;
                                return false;
                            }
                        });
                        if (hasAnActiveEntry) {
                            return '<span class="slds-icon_container" title="Is Active"><slds-svg-icon sprite="\'utility\'"' +
                                    ' icon="\'success\'" size="\'x-small\'" extra-classes="\'slds-icon-text-default\'"></slds-svg-icon></span>';
                        }
                    }
                }];
                
                // THESE ARE ADDED IN THE DROP DOWN ARROW FOR EACH CHILD ROW
                $scope.rowActions = [{
                    type: 'export',
                    drvType: 'DocumentTemplate'
                }];
            }]);//End Controller
        </script>
    </head> 
    <body xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <div ng-app="docTemplateListApp" ng-controller="docTemplateListController" class="vlocity via-slds ng-cloak {!$User.UIThemeDisplayed}">
            <slds-home new-url="'{!newUrl}'" s-object-type="'{!$ObjectType.DocumentTemplate__c.Name}'" row-actions="rowActions" id-prefix="document-home" default-columns="defaultColumns"></slds-home>
            
        </div>
        <c:VFActionFunction />
        <script>
            window.i18n = {
                "SldsObjectHomeHeaderInfo": "{!$Label.vlocity_cmt__sldsobjecthomeheaderinfo}",
                "RefreshData": "{!$Label.vlocity_cmt__refreshdata}",
                "Export": "{!$Label.vlocity_cmt__export}",
                "New": "{!$Label.vlocity_cmt__new}",
                "FilterList": "{!$Label.vlocity_cmt__filterlist}",
                "Import": "{!$Label.vlocity_cmt__import}",
                "AdditionalActions": "{!$Label.vlocity_cmt__additionalactions}",
                "Delete": "{!$Label.vlocity_cmt__delete}",
                "Preview": "{!$Label.vlocity_cmt__preview}",
                "LastModified": "{!$Label.vlocity_cmt__lastmodified}",
                "Name": "{!$Label.vlocity_cmt__name}",
                "ModifiedOnBy": "{!$Label.vlocity_cmt__modifiedonby}",
                "DeleteLayout": "{!$Label.vlocity_cmt__deletelayout}",
                "InstallDataPack": "{!$Label.vlocity_cmt__installdatapack}",
                "DeleteLayoutConfirmation": "{!$Label.vlocity_cmt__deletelayoutconfirmation}",
                "Filters":"{!$Label.vlocity_cmt__filters}",
                "HideFilter":"{!$Label.vlocity_cmt__hidefilter}",
                "Cancel":"{!$Label.vlocity_cmt__cancel}",
                "Save":"{!$Label.vlocity_cmt__save}",
                "ShowMe":"{!$Label.vlocity_cmt__showme}",
                "MatchingAllOfTheseFilters":"{!$Label.vlocity_cmt__matchingallofthesefilters}",
                "Remove":"{!$Label.vlocity_cmt__remove}",
                "NewFilter":"{!$Label.vlocity_cmt__newfilter}",
                "AddFilter":"{!$Label.vlocity_cmt__addfilter}",
                "RemoveAll":"{!$Label.vlocity_cmt__removeall}",
                "Field":"{!$Label.vlocity_cmt__field}",
                "Operator":"{!$Label.vlocity_cmt__operator}",
                "Value":"{!$Label.vlocity_cmt__value}",
                "Done":"{!$Label.vlocity_cmt__done}",
                "AllType":"{!$Label.vlocity_cmt__alltype}",
                "MyType":"{!$Label.vlocity_cmt__mytype}"
            };
        </script>
    </body>
</apex:page>